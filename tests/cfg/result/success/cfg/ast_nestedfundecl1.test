function[0] top-level {
  Entry[-1] -> [0]

  Block[0] -> [1], ExitExc
    [0] f := function (1) @ #1, #2
    [1] noop(StartOfFile)
    [2] y := 1
    [3] <>Global<>ignore2 := alloc() @ #3
    [4] <>Global<>ignore2["y"] := 10
    [5] obj := <>Global<>ignore2
    [6] <>Global<>ignore3 := <>Global<>toObject(obj) @ #4
    [7] <>alpha<>2 := <>Global<>ignore3
    [8] <>obj<>3 := <>Global<>toObject(alert) @ #5
    [9] <>obj<>4 := <>Global<>toObject(f) @ #6
    [10] <>arguments<>5 := allocArg(0) @ #7
    [11] <>fun<>6 := <>Global<>getBase(f)
    [12] <>this<> := enterCode(<>fun<>6)

  Call[1] -> ExitExc
    [0] call(<>obj<>4, <>this<>, <>arguments<>5) @ #8

  AfterCall[2] -> [4]

  AfterCatch[3] -> ExitExc

  Block[4] -> [5], ExitExc
    [0] <>arguments<>8 := allocArg(1) @ #10
    [1] <>arguments<>8["0"] := <>temp<>7
    [2] <>fun<>9 := <>Global<>getBase(alert)
    [3] <>this<> := enterCode(<>fun<>9)

  Call[5] -> ExitExc
    [0] call(<>obj<>3, <>this<>, <>arguments<>8) @ #11

  AfterCall[6] -> [8]

  AfterCatch[7] -> ExitExc

  Block[8] -> [9], ExitExc
    [0] <>obj<>10 := <>Global<>toObject(f) @ #13
    [1] <>arguments<>11 := allocArg(0) @ #14
    [2] <>fun<>12 := <>Global<>getBase(f)
    [3] <>this<> := enterCode(<>fun<>12)

  Call[9] -> ExitExc
    [0] call(<>obj<>10, <>this<>, <>arguments<>11) @ #15

  AfterCall[10] -> [12]

  AfterCatch[11] -> ExitExc

  Block[12] -> Exit, ExitExc
    [0] <>Global<>ignore7 := y
    [1] noop(EndOfFile)

  Exit[-2]

  ExitExc[-3]

}

function[1] f {
  Entry[-1] -> [0]

  Block[0] -> Exit, ExitExc
    [0] return(y)

  Exit[-2]

  ExitExc[-3]

}

