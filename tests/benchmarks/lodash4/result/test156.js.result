[DEBUG] (-40:Block[0], (30-CFA(19:1,0:249)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[MODULE] lodash.merge"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,24:5,773:9,20:8,772:1,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] deepEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,28:1,774:9,20:8,772:5,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] notStrictEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,27:1,774:13,20:8,772:5,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] strictEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,24:5,775:9,20:8,772:9,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] deepEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,27:1,776:9,20:8,772:13,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] strictEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,27:1,776:13,20:8,772:13,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] strictEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,24:5,778:9,20:8,772:17,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] deepEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,24:5,780:9,20:8,772:21,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] deepEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,24:5,782:9,20:8,772:25,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] deepEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,23:1,782:13,20:8,772:25,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] undefined"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,24:5,782:21,20:8,772:25,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] deepEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,27:1,784:16,20:8,772:29,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] strictEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,27:1,784:20,20:8,772:29,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] strictEqual"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,786:13,20:8,772:33,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] undefined"
        objects:
[DEBUG] (-40:Block[0], (30-CFA(22:3,24:5,786:17,20:8,772:33,0:253)|LSA[i:10,j:400]()))
        expression: <>msg<>1
        exceptions: Set()
        pvalue    : "[PASS] deepEqual"
        objects:
--------------------------------------------------
Call[253] of function[0] top-level @ tests/test156.js:3:2-394:4
Call[37] of function[772] funexpr@3:2-394:2 @ tests/test156.js:143:3-165:5
Call[8] of function[20] test @ setting.js:37:3-12
Call[9] of function[787] funexpr@143:50-165:4 @ tests/test156.js:151:5-30
Call[1] of function[23] Assert.prototype.notOk @ setting.js:55:3-22
Call[8] of function[22] ok @ setting.js:52:10-19
[StopAnalysis] throws an exception
