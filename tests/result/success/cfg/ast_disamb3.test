(0,LBlock(20))
    [0] <>old<>11 := v
    [1] <>new<>12 := <>Global<>toNumber(<>old<>11)
    [2] v := <>new<>12 + 1
    [3] <>Global<>ignore6 := <>new<>12


(0,LBlock(19))
    [0] assert(! v < 3)


(0,LBlock(18))
    [0] assert(v < 3)


(0,LBlock(17))


(0,LBlock(16))
    [0] noop(EndOfFile)


(0,LBlock(15))
    [0] <>old<>9 := z
    [1] <>new<>10 := <>Global<>toNumber(<>old<>9)
    [2] z := <>new<>10 + 1
    [3] <>Global<>ignore3 := <>new<>10


(0,LBlock(14))
    [0] assert(! z < 5)


(0,LBlock(13))
    [0] assert(z < 5)


(0,LBlock(12))


(0,LBlock(11))
    [0] v := 0


(0,LBlock(10))
    [0] <>cond1<>7 := <>Global<>iteratorHasNext(<>obj<>5, <>iterator<>6)


(0,LBlock(9))
    [0] assert(! <>cond1<>7)


(0,LBlock(8))
    [0] assert(<>cond1<>7)
    [1] <>key<>8 := <>Global<>iteratorNext(<>obj<>5, <>iterator<>6)
    [2] y := <>key<>8


(0,LBlock(7))


(0,LBlock(6))


(0,LBlock(5))
    [0] <>cond1<>3 := <>Global<>iteratorHasNext(<>obj<>1, <>iterator<>2)


(0,LBlock(4))
    [0] assert(! <>cond1<>3)


(0,LBlock(3))
    [0] assert(<>cond1<>3)
    [1] <>key<>4 := <>Global<>iteratorNext(<>obj<>1, <>iterator<>2)
    [2] x := <>key<>4


(0,LBlock(2))


(0,LBlock(1))
    [0] y := undefined
    [1] <>obj<>5 := collection
    [2] <>iterator<>6 := <>Global<>iteratorInit(<>obj<>5) @ #2
    [3] <>cond1<>7 := <>Global<>iteratorHasNext(<>obj<>5, <>iterator<>6)


(0,LBlock(0))
    [0] noop(StartOfFile)
    [1] <>obj<>1 := collection
    [2] <>iterator<>2 := <>Global<>iteratorInit(<>obj<>1) @ #1
    [3] <>cond1<>3 := <>Global<>iteratorHasNext(<>obj<>1, <>iterator<>2)


