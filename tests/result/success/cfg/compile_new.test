(0,LBlock(33))
    [0] myfunction := <>Global<>ignore3
    [1] noop(EndOfFile)


(0,LBlock(32))
    [0] assert(! <>cond<>39)
    [1] <>Global<>ignore3 := <>obj<>37


(0,LBlock(31))
    [0] assert(<>cond<>39)
    [1] <>Global<>ignore3 := <>newObj<>38


(0,LBlock(30))


(0,LBlock(29))
    [EDGE] after-call(<>newObj<>38)
    [0] <>cond<>39 := <>Global<>isObject(<>newObj<>38)


(0,LBlock(25))
    [0] <>fun1<>33 := function (1) @ #22, #23
    [1] <>fun<>34 := <>Global<>toObject(<>fun1<>33) @ #24
    [2] <>arguments<>35 := allocArg(0) @ #25
    [3] <>proto<>36 := <>fun<>34["prototype"]
    [4] <>obj<>37 := alloc(<>proto<>36) @ #26
    [0] construct(<>fun<>34, <>obj<>37, <>arguments<>35) @ #27, #28


(2,LBlock(0))
    [0] <>old<>30 := actual
    [1] actual := <>old<>30 + "this.valueOf called. "


(1,LBlock(0))
    [0] <>obj<>28 := <>Global<>toObject(this) @ #19
    [1] <>Global<>ignore4 := function (2) @ #20, #21
    [2] <>obj<>28["valueOf"] := <>Global<>ignore4


(0,LBlock(24))
    [0] throw(<>new1<>26)


(0,LBlock(23))
    [0] assert(! <>cond<>25)
    [1] <>new1<>26 := <>obj<>23


(0,LBlock(22))
    [0] assert(<>cond<>25)
    [1] <>new1<>26 := <>newObj<>24


(0,LBlock(21))


(0,LBlock(20))
    [EDGE] after-call(<>newObj<>24)
    [0] <>cond<>25 := <>Global<>isObject(<>newObj<>24)


(0,LBlock(16))
    [0] <>fun<>19 := <>Global<>toObject(TypeError) @ #14
    [1] <>temp<>20 := "here"
    [2] <>arguments<>21 := allocArg(1) @ #15
    [3] <>arguments<>21["0"] := <>temp<>20
    [4] <>proto<>22 := <>fun<>19["prototype"]
    [5] <>obj<>23 := alloc(<>proto<>22) @ #16
    [0] construct(<>fun<>19, <>obj<>23, <>arguments<>21) @ #17, #18


(0,LBlock(15))
    [0] assert(! <>cond<>18)
    [1] <>Global<>ignore2 := <>obj<>16


(0,LBlock(14))
    [0] assert(<>cond<>18)
    [1] <>Global<>ignore2 := <>newObj<>17


(0,LBlock(13))


(0,LBlock(12))
    [EDGE] after-call(<>newObj<>17)
    [0] <>cond<>18 := <>Global<>isObject(<>newObj<>17)


(0,LBlock(8))
    [0] gCurrentTestStop := <>Global<>ignore1
    [1] <>obj<>7 := <>Global<>toObject(win) @ #6
    [2] <>fun<>8 := <>Global<>toObject(<>obj<>7["TestCase"]) @ #7
    [3] <>obj<>9 := <>Global<>toObject(win) @ #8
    [4] <>temp<>10 := <>obj<>9["gTestFile"]
    [5] <>obj<>11 := <>Global<>toObject(win) @ #9
    [6] <>temp<>12 := <>obj<>11["summary"]
    [7] <>temp<>13 := "Unknown"
    [8] <>arguments<>14 := allocArg(3) @ #10
    [9] <>arguments<>14["0"] := <>temp<>10
    [10] <>arguments<>14["1"] := <>temp<>12
    [11] <>arguments<>14["2"] := <>temp<>13
    [12] <>proto<>15 := <>fun<>8["prototype"]
    [13] <>obj<>16 := alloc(<>proto<>15) @ #11
    [0] construct(<>fun<>8, <>obj<>16, <>arguments<>14) @ #12, #13


(0,LBlock(7))
    [0] assert(! <>cond<>6)
    [1] <>Global<>ignore1 := <>obj<>4


(0,LBlock(6))
    [0] assert(<>cond<>6)
    [1] <>Global<>ignore1 := <>newObj<>5


(0,LBlock(5))


(0,LBlock(4))
    [EDGE] after-call(<>newObj<>5)
    [0] <>cond<>6 := <>Global<>isObject(<>newObj<>5)


(0,LBlock(0))
    [0] noop(StartOfFile)
    [1] <>fun<>1 := <>Global<>toObject(Date) @ #1
    [2] <>arguments<>2 := allocArg(0) @ #2
    [3] <>proto<>3 := <>fun<>1["prototype"]
    [4] <>obj<>4 := alloc(<>proto<>3) @ #3
    [0] construct(<>fun<>1, <>obj<>4, <>arguments<>2) @ #4, #5


