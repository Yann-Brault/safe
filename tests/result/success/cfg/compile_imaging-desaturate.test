function[0] top-level {
  Entry[-1] -> [0]

  Block[0] -> [1], ExitExc
    A LOT!!! 427209 instructions are not printed here.

  Call[1] -> ExitExc
    [0] construct(<>fun<>1, <>obj<>4, <>arguments<>2) @ #5, #6

  AfterCall[2] -> [4]

  AfterCatch[3] -> ExitExc

  Block[4] -> [6], [5]
    [0] <>cond<>6 := <>Global<>isObject(<>newObj<>5)

  Block[5] -> [7], ExitExc
    [0] assert(<>cond<>6)
    [1] <>Global<>ignore4 := <>newObj<>5

  Block[6] -> [7], ExitExc
    [0] assert(! <>cond<>6)
    [1] <>Global<>ignore4 := <>obj<>4

  Block[7] -> [9], ExitExc
    [0] _sunSpiderStartDate := <>Global<>ignore4
    [1] <>Global<>ignore5 := alloc() @ #7
    [2] Pixastic := <>Global<>ignore5
    [3] <>obj<>7 := <>Global<>toObject(Pixastic) @ #8
    [4] <>Global<>ignore6 := alloc() @ #9
    [5] <>obj<>7["Actions"] := <>Global<>ignore6
    [6] <>obj<>8 := <>Global<>toObject(Pixastic) @ #10
    [7] <>obj<>9 := <>Global<>toObject(<>obj<>8["Actions"]) @ #11
    [8] <>temp<>54 := function (1) @ #33, #34
    [9] <>Global<>ignore7 := alloc() @ #35
    [10] <>Global<>ignore7["process"] := <>temp<>54
    [11] <>obj<>9["desaturate"] := <>Global<>ignore7
    [12] <>temp<>55 := alloc() @ #36
    [13] <>temp<>55["width"] := width
    [14] <>temp<>55["height"] := height
    [15] <>temp<>56 := alloc() @ #37
    [16] <>temp<>56["rect"] := <>temp<>55
    [17] <>Global<>ignore17 := alloc() @ #38
    [18] <>Global<>ignore17["options"] := <>temp<>56
    [19] <>Global<>ignore17["data"] := squidImageData
    [20] params := <>Global<>ignore17
    [21] pixcounter := 0

  Block[8] -> Exit
    [0] noop(EndOfFile)

  Block[9] -> [11], [10]

  Block[10] -> [13], ExitExc
    [0] assert(pixcounter < 200)
    [1] <>obj<>57 := <>Global<>toObject(Pixastic) @ #39
    [2] <>obj<>58 := <>Global<>toObject(<>obj<>57["Actions"]) @ #40
    [3] <>obj<>59 := <>Global<>toObject(<>obj<>58["desaturate"]) @ #41
    [4] <>temp<>60 := params
    [5] <>arguments<>61 := allocArg(1) @ #42
    [6] <>arguments<>61["0"] := <>temp<>60
    [7] <>fun<>62 := <>Global<>toObject(<>obj<>59["process"]) @ #43

  Block[11] -> [8], ExitExc
    [0] assert(! pixcounter < 200)

  Block[12] -> [9], ExitExc
    [0] <>old<>63 := pixcounter
    [1] <>new<>64 := <>Global<>toNumber(<>old<>63)
    [2] pixcounter := <>new<>64 + 1
    [3] <>Global<>ignore20 := <>new<>64

  Call[13] -> ExitExc
    [0] call(<>fun<>62, <>obj<>59, <>arguments<>61) @ #44

  AfterCall[14] -> [12]

  AfterCatch[15] -> ExitExc

  Exit[-2]

  ExitExc[-3]

}

function[1] <>funexpr@24:15-42:6<> {
  Entry[-1] -> [0]

  Block[0] -> [2], [1], ExitExc
    [0] <>obj<>21 := <>Global<>toObject(<>params<>10) @ #12
    [1] <>obj<>22 := <>Global<>toObject(<>obj<>21["options"]) @ #13

  Block[1] -> [3], ExitExc
    [0] assert(<>obj<>22["average"])
    [1] <>obj<>23 := <>Global<>toObject(<>params<>10) @ #14
    [2] <>obj<>24 := <>Global<>toObject(<>obj<>23["options"]) @ #15
    [3] <>y<>25 := <>obj<>24["average"] != "false"

  Block[2] -> [5], [4], ExitExc
    [0] assert(! <>obj<>22["average"])

  Block[3] -> [8], [7], ExitExc
    [0] <>useAverage<>11 := ! ! <>y<>25
    [1] <>obj<>26 := <>Global<>toObject(<>params<>10) @ #16
    [2] <>data<>12 := <>obj<>26["data"]
    [3] <>obj<>27 := <>Global<>toObject(<>params<>10) @ #17
    [4] <>obj<>28 := <>Global<>toObject(<>obj<>27["options"]) @ #18
    [5] <>rect<>13 := <>obj<>28["rect"]
    [6] <>obj<>29 := <>Global<>toObject(<>rect<>13) @ #19
    [7] <>w<>14 := <>obj<>29["width"]
    [8] <>obj<>30 := <>Global<>toObject(<>rect<>13) @ #20
    [9] <>h<>15 := <>obj<>30["height"]
    [10] <>p<>16 := <>w<>14 * <>h<>15
    [11] <>pix<>17 := <>p<>16 * 4

  Block[4] -> [6], ExitExc
    [0] assert(typeof <>obj<>22["average"] == "boolean")
    [1] <>y<>25 := false

  Block[5] -> [6], ExitExc
    [0] assert(typeof <>obj<>22["average"] != "boolean")
    [1] <>y<>25 := <>obj<>22["average"]

  Block[6] -> [3]

  Block[7] -> [10], ExitExc
    [0] assert(<>useAverage<>11)
    [1] <>old<>31 := <>p<>16
    [2] <>new<>32 := <>Global<>toNumber(<>old<>31)
    [3] <>p<>16 := <>new<>32 - 1

  Block[8] -> [16], ExitExc
    [0] assert(! <>useAverage<>11)
    [1] <>old<>42 := <>p<>16
    [2] <>new<>43 := <>Global<>toNumber(<>old<>42)
    [3] <>p<>16 := <>new<>43 - 1

  Block[9] -> [14]

  Block[10] -> [12], [11]

  Block[11] -> [13], ExitExc
    [0] assert(<>new<>32)
    [1] <>obj<>33 := <>Global<>toObject(<>data<>12) @ #21
    [2] <>old<>34 := <>pix<>17
    [3] <>pix<>17 := <>old<>34 - 4
    [4] <>obj<>35 := <>Global<>toObject(<>data<>12) @ #22
    [5] <>pix1<>18 := <>pix<>17 + 1
    [6] <>obj<>36 := <>Global<>toObject(<>data<>12) @ #23
    [7] <>pix2<>19 := <>pix<>17 + 2
    [8] <>obj<>37 := <>Global<>toObject(<>data<>12) @ #24
    [9] <>y<>38 := <>obj<>37[<>pix<>17]
    [10] <>obj<>39 := <>Global<>toObject(<>data<>12) @ #25
    [11] <>y<>40 := <>y<>38 + <>obj<>39[<>pix1<>18]
    [12] <>obj<>41 := <>Global<>toObject(<>data<>12) @ #26
    [13] <>obj<>36[<>pix<>17 + 2] := <>y<>40 + <>obj<>41[<>pix2<>19] / 3
    [14] <>obj<>35[<>pix<>17 + 1] := <>obj<>36[<>pix<>17 + 2]
    [15] <>obj<>33[<>old<>34 - 4] := <>obj<>35[<>pix<>17 + 1]

  Block[12] -> [9], ExitExc
    [0] assert(! <>new<>32)

  Block[13] -> [10], ExitExc
    [0] <>old<>31 := <>p<>16
    [1] <>new<>32 := <>Global<>toNumber(<>old<>31)
    [2] <>p<>16 := <>new<>32 - 1

  Block[14] -> Exit, ExitExc
    [0] return(true)

  Block[15] -> [14]

  Block[16] -> [18], [17]

  Block[17] -> [19], ExitExc
    [0] assert(<>new<>43)
    [1] <>obj<>44 := <>Global<>toObject(<>data<>12) @ #27
    [2] <>old<>45 := <>pix<>17
    [3] <>pix<>17 := <>old<>45 - 4
    [4] <>obj<>46 := <>Global<>toObject(<>data<>12) @ #28
    [5] <>pix1<>18 := <>pix<>17 + 1
    [6] <>obj<>47 := <>Global<>toObject(<>data<>12) @ #29
    [7] <>pix2<>19 := <>pix<>17 + 2
    [8] <>obj<>48 := <>Global<>toObject(<>data<>12) @ #30
    [9] <>y<>49 := <>obj<>48[<>pix<>17] * 0.3
    [10] <>obj<>50 := <>Global<>toObject(<>data<>12) @ #31
    [11] <>y<>51 := <>y<>49 + <>obj<>50[<>pix1<>18] * 0.59
    [12] <>obj<>52 := <>Global<>toObject(<>data<>12) @ #32
    [13] <>obj<>47[<>pix<>17 + 2] := <>y<>51 + <>obj<>52[<>pix2<>19] * 0.11
    [14] <>obj<>46[<>pix<>17 + 1] := <>obj<>47[<>pix<>17 + 2]
    [15] <>obj<>44[<>old<>45 - 4] := <>obj<>46[<>pix<>17 + 1]

  Block[18] -> [15], ExitExc
    [0] assert(! <>new<>43)

  Block[19] -> [16], ExitExc
    [0] <>old<>42 := <>p<>16
    [1] <>new<>43 := <>Global<>toNumber(<>old<>42)
    [2] <>p<>16 := <>new<>43 - 1

  Exit[-2]

  ExitExc[-3]

}

