function[0] top-level {
  Entry[-1] -> [0]

  Block[0] -> [1], ExitExc
    [0] f := function (1) @ #1, #2
    [1] noop(StartOfFile)
    [2] y := 1
    [3] <>Global<>ignore2 := alloc() @ #3
    [4] <>Global<>ignore2["y"] := 10
    [5] obj := <>Global<>ignore2
    [6] <>Global<>ignore3 := <>Global<>toObject(obj) @ #4
    [7] <>alpha<>2 := <>Global<>ignore3
    [8] <>obj<>3 := <>Global<>toObject(alert) @ #5
    [9] <>obj<>4 := <>Global<>toObject(f) @ #6
    [10] <>arguments<>5 := allocArg(0) @ #7
    [11] <>fun<>6 := <>Global<>getBase(f)

  Call[1]
    [0] call(<>obj<>4, <>fun<>6, <>arguments<>5) @ #8

  AfterCall[2] -> [4]

  AfterCatch[3] -> [5]

  Block[4] -> [6], ExitExc
    [0] <>arguments<>8 := allocArg(1) @ #10
    [1] <>arguments<>8["0"] := <>temp<>7
    [2] <>fun<>9 := <>Global<>getBase(alert)

  Block[5] -> ExitExc

  Call[6]
    [0] call(<>obj<>3, <>fun<>9, <>arguments<>8) @ #11

  AfterCall[7] -> [9]

  AfterCatch[8] -> [10]

  Block[9] -> [11], ExitExc
    [0] <>obj<>10 := <>Global<>toObject(f) @ #13
    [1] <>arguments<>11 := allocArg(0) @ #14
    [2] <>fun<>12 := <>Global<>getBase(f)

  Block[10] -> ExitExc

  Call[11]
    [0] call(<>obj<>10, <>fun<>12, <>arguments<>11) @ #15

  AfterCall[12] -> [14]

  AfterCatch[13] -> [15]

  Block[14] -> Exit, ExitExc
    [0] <>Global<>ignore7 := y
    [1] noop(EndOfFile)

  Block[15] -> ExitExc

  Exit[-2]

  ExitExc[-3]

}

function[1] f {
  Entry[-1] -> [0]

  Block[0] -> Exit, ExitExc
    [0] return(y)

  Exit[-2]

  ExitExc[-3]

}

