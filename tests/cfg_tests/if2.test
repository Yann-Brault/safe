(0,LBlock(17))


(0,LBlock(16))
    [EDGE] after-call(<>Global<>ignore4)
    [43] noop(EndOfFile)


(0,LBlock(15))


(0,LBlock(14))
    [EDGE] after-call(<>z<>17)
    [38] <>temp<>18 := <>y<>11 + <>z<>17 + " won."
    [39] <>arguments<>19 := allocArg(1) @ #12
    [40] <>arguments<>19["0"] := <>temp<>18
    [41] <>fun<>20 := <>Global<>getBase(print)
    [42] call(<>obj<>10, <>fun<>20, <>arguments<>19) @ #13


(1,LBlock(13))


(1,LBlock(12))
    [14] assert(<>product<>2 != "melon")
    [18] return(<>budget<>1)


(1,LBlock(11))
    [13] assert(<>product<>2 == "melon")
    [15] <>y<>8 := <>budget<>1
    [16] <>obj<>9 := <>Global<>toObject(productlist) @ #3
    [17] return(<>y<>8 - <>obj<>9["melon"])


(1,LBlock(10))


(1,LBlock(9))
    [9] assert(<>product<>2 != "banana")


(1,LBlock(8))
    [8] assert(<>product<>2 == "banana")
    [10] <>y<>6 := <>budget<>1
    [11] <>obj<>7 := <>Global<>toObject(productlist) @ #2
    [12] return(<>y<>6 - <>obj<>7["banana"])


(1,LBlock(7))


(1,LBlock(6))
    [4] assert(<>product<>2 != "apple")


(1,LBlock(5))
    [3] assert(<>product<>2 == "apple")
    [5] <>y<>4 := <>budget<>1
    [6] <>obj<>5 := <>Global<>toObject(productlist) @ #1
    [7] return(<>y<>4 - <>obj<>5["apple"])


(1,LBlock(4))


(1,LBlock(3))
    [1] assert(! <>budget<>1 <= 0)


(1,LBlock(2))
    [0] assert(<>budget<>1 <= 0)
    [2] return(<>budget<>1)


(1,LBlock(1))


(0,LBlock(0))
    [19] pay := function (1) @ #4, #5
    [20] noop(StartOfFile)
    [21] <>Global<>ignore1 := alloc() @ #6
    [22] <>Global<>ignore1["apple"] := 100
    [23] <>Global<>ignore1["banana"] := 200
    [24] <>Global<>ignore1["melon"] := 300
    [25] productlist := <>Global<>ignore1
    [26] money := 1000
    [27] fruit := "melon"
    [28] <>obj<>10 := <>Global<>toObject(print) @ #7
    [29] <>y<>11 := "I had " + money + " won. I bought " + fruit + ", and now I have "
    [30] <>obj<>12 := <>Global<>toObject(pay) @ #8
    [31] <>temp<>13 := money
    [32] <>temp<>14 := fruit
    [33] <>arguments<>15 := allocArg(2) @ #9
    [34] <>arguments<>15["0"] := <>temp<>13
    [35] <>arguments<>15["1"] := <>temp<>14
    [36] <>fun<>16 := <>Global<>getBase(pay)
    [37] call(<>obj<>12, <>fun<>16, <>arguments<>15) @ #10



